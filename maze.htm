<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<html>
<body>
<script src="jquery-1.9.1.min.js"></script>
<script>
var backtrack = false, debug = false, path = 0, pos2 = [];

$(function(){
  var size = 50;
  $(document.body).append("<table id='tbl'/>")
  var tbl = $('#tbl');
  for(r=0;r<size;r++){
    var tr = $('<tr/>');
    for(c=0;c<size;c++){
        tr.append( "<td class='n s e w'></td>");
    }
    tbl.append(tr);
  }
  visit(tbl,rand(0,size-1),rand(0,size-1));
});

function visit(tbl,r,c){
  var t = tbl[0];
  var cell = t.rows[r].cells[c];
  //represent the start position
  if(path==0) 
    if(debug) $(cell).css('background','yellow')
    else $(cell).text('start');
  //zebra-stripe the path taken
  else if(path%2 && $(cell).text()=='' && debug) $(cell).css('background','aliceblue')
  //show the step in the path
  if(debug)$(cell).append(path+"<br/>");
  $(cell).data('visited',true);
  $(cell).data('path',++path);
  var pos = [];
  
  if(r+1 < t.rows.length && !$(t.rows[r+1].cells[c]).data('visited')) 
    pos.push({r:r+1,c:c,d:'sn'});
  if(r-1 >= 0 && !$(t.rows[r-1].cells[c]).data('visited')) 
    pos.push({r:r-1,c:c,d:'ns'});
  if(c+1 < t.rows.length && !$(t.rows[r].cells[c+1]).data('visited')) 
    pos.push({r:r,c:c+1,d:'ew'});
  if(c-1 >= 0 && !$(t.rows[r].cells[c-1]).data('visited')) 
    pos.push({r:r,c:c-1,d:'we'});
    
  shuffle(pos);
  
  var currPos = pos[0];
  if(!pos.length){
      var cr = $(t.rows[r].cells[c])
      var crHtml = cr.html();
      if(crHtml.lastIndexOf('>')==crHtml.indexOf('>'))
      //represent a dead-end where we needed to backtrack or choose a previous point randomly
      if(debug)cr.css('background','red')
      
      //we could backtrack or we could pick one that had more paths at random
      if(pos2.length){
        var cpos;
        if(backtrack){
          cpos = pos2.pop();
        }else{
          shuffle(pos2);
          cpos = pos2[0];
          pos2.splice(0, 1);
        }
        var rr = cpos.r;
        var cc = cpos.c
        visit(tbl,rr,cc)
      }else{
        cr = $(t.rows[r].cells[c])
        //represent the ending position
        if(debug)cr.css('background','lightgreen')
        else cr.text('finish');
      }
  }else if(pos.length>1){
    pos2.push(currPos);
  }
  
  if(pos.length){
    var r2 = currPos.r
    var c2 = currPos.c;
    var cell2 = t.rows[r2].cells[c2];
    //remove "wall"
    $(cell).removeClass(currPos.d[0]); 
    $(cell2).removeClass(currPos.d[1]);
    visit(tbl,r2,c2);
  }
}

function rand(min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
}

function shuffle(o){
    for(var j, x, i = o.length; i; j = Math.floor(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);
    return o;
}; 
</script>
<style>
/*north south east west*/
.n{border-top:1px solid black}
.s{border-bottom:1px solid black}
.e{border-right:1px solid black}
.w{border-left:1px solid black}
table{border-collapse:collapse;}
td{width:20px;height:20px;font-size:xx-small}
</style>
</body>
</html>
